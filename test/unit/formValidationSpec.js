// Generated by CoffeeScript 1.4.0
(function() {

  describe('form validation', function() {
    var VLDT_ERROR_CLS, compile, hasErr;
    VLDT_ERROR_CLS = 'vldt-error';
    hasErr = function(elm) {
      return elm.hasClass(VLDT_ERROR_CLS);
    };
    compile = null;
    beforeEach(module('Site'));
    beforeEach(inject(function($compile) {
      return compile = $compile;
    }));
    it('should not validate fields that are not yet modified', function() {
      var $elm;
      $elm = $(compile('<input vldt="req,mail,length:5">')({}));
      return expect(hasErr($elm)).toBeFalsy();
    });
    it('should validate required rule', function() {
      var $elm;
      $elm = $(compile('<input vldt="req">')({}));
      expect(hasErr($elm)).toBeFalsy();
      $elm.val('foo').change();
      expect(hasErr($elm)).toBeFalsy();
      $elm.val('').change();
      expect(hasErr($elm)).toBeTruthy();
      $elm.val('bar').change();
      return expect(hasErr($elm)).toBeFalsy();
    });
    it('should validate mail rule', function() {
      var $elm;
      $elm = $(compile('<input vldt="mail">')({}));
      $elm.val('foobar').change();
      expect(hasErr($elm)).toBeTruthy();
      $elm.val('fake@emai.l').change();
      expect(hasErr($elm)).toBeTruthy();
      $elm.val('real@email.com').change();
      return expect(hasErr($elm)).toBeFalsy();
    });
    it('should validate length rule', function() {
      var $elm;
      $elm = $(compile('<input vldt="length:5">')({}));
      $elm.val('123').change();
      expect(hasErr($elm)).toBeTruthy();
      $elm.val('12345').change();
      return expect(hasErr($elm)).toBeFalsy();
    });
    it('should validate digit rule', function() {
      var $elm;
      $elm = $(compile('<input vldt="digit">')({}));
      $elm.val('foo123').change();
      expect(hasErr($elm)).toBeTruthy();
      $elm.val('123bar').change();
      expect(hasErr($elm)).toBeTruthy();
      $elm.val('12345').change();
      return expect(hasErr($elm)).toBeFalsy();
    });
    it('should validate match rule', function() {
      var $elm1, $elm2, dom;
      dom = compile('<div><input id="inp1"/><input id="inp2" vldt="match:#inp1"/></div>')({});
      $elm1 = $(compile(dom.find("#inp1"))({}));
      $elm2 = $(compile(dom.find("#inp2"))({}));
      $elm1.val('foobar').change();
      expect(hasErr($elm2)).toBeFalsy();
      $elm2.val('foo').change();
      expect(hasErr($elm2)).toBeTruthy();
      $elm2.val('foobar').change();
      return expect(hasErr($elm2)).toBeTruthy();
    });
    it('should validate multiple rules', function() {
      var $elm;
      $elm = $(compile('<input vldt="digit,req, length:5">')({}));
      $elm.val('foo123').change();
      expect(hasErr($elm)).toBeTruthy();
      $elm.val('12345').change();
      return expect(hasErr($elm)).toBeFalsy();
    });
    return it('should break on unrecognized rules', function() {
      var $bad, $good;
      $bad = $(compile('<input vldt="fake,rules">')({}));
      expect(function() {
        return $bad.change();
      }).toThrow({
        message: "Unknown rule type 'fake'"
      });
      $good = $(compile('<input vldt="req,digit">')({}));
      return expect(function() {
        return $good.change();
      }).not.toThrow();
    });
  });

}).call(this);
