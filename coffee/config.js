// Generated by CoffeeScript 1.4.0
(function() {
  var Site;

  Site = angular.module('Site', ['ngResource', 'ngCookies']);

  Site.config(function($routeProvider, $locationProvider, $httpProvider) {
    return $routeProvider.when('/', {
      templateUrl: 'views/home/index.html',
      controller: 'HomeIndexCtrl',
      auth: 0
    }).when('/login', {
      templateUrl: 'views/home/login.html',
      controller: 'HomeLoginCtrl',
      auth: 0
    }).when('/manage', {
      redirectTo: 'manage/usage'
    }).when('/manage/:page', {
      templateUrl: 'views/manage/index.html',
      controller: 'ManageIndexCtrl',
      auth: 0
    }).when('/case/create', {
      templateUrl: 'views/case/create.html',
      controller: 'CaseCreateCtrl',
      auth: 0
    }).when('/not-found', {
      templateUrl: 'views/errors/not-found.html',
      auth: 0
    }).otherwise({
      redirectTo: '/not-found'
    });
  });

  Site.run(function($rootScope, $location, $route, Session) {
    var error, startListening, success, validateRoute;
    startListening = function() {
      return $rootScope.$on('$routeChangeStart', function(event, current, previous) {
        if (!(current.redirectTo != null)) {
          return validateRoute(current.$route);
        }
      });
    };
    error = success = function() {
      validateRoute($route);
      return startListening();
    };
    Session.tryCookie().then(success, error);
    return validateRoute = function(route) {
      var authorized, clearance;
      authorized = false;
      clearance = route.auth;
      if (clearance === 0) {
        authorized = true;
      } else if ((clearance != null) && (Session.user != null)) {

      } else {
        authorized = Session.user != null;
      }
      if (!authorized) {
        return $location.path('/login');
      }
    };
  });

}).call(this);
