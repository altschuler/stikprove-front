// Generated by CoffeeScript 1.4.0
(function() {
  var Site, console, length, method, methods;

  Site = angular.module('Site', ['ngResource']);

  Site.config(function($routeProvider, $locationProvider) {
    return $routeProvider.when('/', {
      templateUrl: 'views/home/front.html',
      controller: 'FrontCtrl'
    }).when('/home/login', {
      templateUrl: 'views/home/login.html',
      controller: 'LoginCtrl'
    }).when('/manage', {
      redirectTo: 'manage/consumption'
    }).when('/manage/:tab', {
      templateUrl: 'views/manage/index.html',
      controller: 'ManageCtrl'
    }).when('/not-found', {
      templateUrl: 'views/errors/not-found.html'
    }).otherwise({
      redirectTo: '/not-found'
    });
  });

  Site.controller('FrontCtrl', function($scope, Api) {
    return $scope.translateFromId = function(id) {
      return $scope.data.translated = Api.translation.get({
        id: id
      });
    };
  });

  Site.controller('ManageCtrl', function($scope, $routeParams) {
    return $scope.activePage = $routeParams.page || "consumption";
  });

  Site.controller('LoginCtrl', function($scope, Api) {
    $scope.data = {
      msg: 'Go login'
    };
    return $scope.login = function() {
      return Api.auth.login($scope.data.userName, $scope.data.password);
    };
  });

  Site.value('BaseURL', 'http://localhost:55471\:55471');

  Site.factory('Api', function($http, $resource, Auth, BaseURL) {
    var Translation, User, rootURL;
    rootURL = 'http://localhost:55471\:55471';
    Translation = $resource(rootURL + '/api/translation/:id');
    User = $resource(rootURL + '/api/user/:id');
    return {
      translation: Translation,
      user: User,
      auth: Auth
    };
  });

  Site.factory('Auth', function(BaseURL) {
    return {
      login: function(userName, password) {
        return console.log(BaseURL, userName, password);
      }
    };
  });

  methods = ['assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeStamp', 'trace', 'warn'];

  length = methods.length;

  console = (window.console = window.console || {});

  while (length--) {
    method = methods[length];
    if (!console[method]) {
      console[method] = function() {};
    }
  }

}).call(this);
